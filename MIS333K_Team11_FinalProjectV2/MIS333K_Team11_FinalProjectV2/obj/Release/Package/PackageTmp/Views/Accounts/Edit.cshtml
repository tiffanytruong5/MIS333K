@model MIS333K_Team11_FinalProjectV2.Models.UserModel
@using Microsoft.AspNet.Identity

@{
                /**/

                ViewBag.Title = "Edit Account";
}
<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm(FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <p class="text-success">@ViewBag.StatusMessage</p>
    <div>
        <h4></h4>
        <hr />
        @Html.HiddenFor(model => model.UserModelID)
        <dl class="dl-horizontal">
        @if (User.Identity.GetUserId() == Model.UserModelID && Model.Role == "Employee")
        {
            @Html.HiddenFor(model => model.FirstName)
            @Html.HiddenFor(model => model.LastName)
            @Html.HiddenFor(model => model.Email)
        }
        @if (User.Identity.GetUserId() == Model.UserModelID && Model.Role == "Customer")
        {
            @Html.HiddenFor(model => model.FirstName)
            @Html.HiddenFor(model => model.LastName)
            @Html.HiddenFor(model => model.Email)
        }
            @if (User.Identity.GetUserId() == Model.UserModelID && Model.Role == "Manager")
        {
            @Html.HiddenFor(model => model.FirstName)
            @Html.HiddenFor(model => model.LastName)
            @Html.HiddenFor(model => model.Email)
        }

        @if (User.Identity.GetUserId() == Model.UserModelID && Model.Role == "Manager")
         {
            <dt>First Name:</dt>
            <dd>
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </dd>

            <dt>Middle Initial:</dt>
            <dd>
                @Html.TextBoxFor(model => model.MiddleInitial, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MiddleInitial, "", new { @class = "text-danger" })
            </dd>

            <dt>Last Name:</dt>
            <dd>
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </dd>     
         } 
        
         @if (User.IsInRole("Manager") && Model.Role == "Customer")
         {
            <dt>First Name:</dt>
            <dd>
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </dd>

            <dt>Middle Initial:</dt>
            <dd>
                @Html.TextBoxFor(model => model.MiddleInitial, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MiddleInitial, "", new { @class = "text-danger" })
            </dd>

            <dt>Last Name:</dt>
            <dd>
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </dd>     
         } 

         @if (User.IsInRole("Manager") && Model.Role == "Employee")
         {
            <dt>First Name:</dt>
            <dd>
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </dd>

            <dt>Middle Initial:</dt>
            <dd>
                @Html.TextBoxFor(model => model.MiddleInitial, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MiddleInitial, "", new { @class = "text-danger" })
            </dd>

            <dt>Last Name:</dt>
            <dd>
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </dd>     
         } 
            
            <dt>Phone:</dt>
            <dd>
                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </dd>

            <dt>Birthday:</dt>
            <dd>
                @Html.TextBoxFor(model => model.Birthday, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </dd>

            <dt>Street:</dt>
            <dd>
                @Html.TextBoxFor(model => model.Street, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </dd>

            <dt>City:</dt>
            <dd>
                @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </dd>

            <dt>State:</dt>
            <dd>
                @Html.EnumDropDownListFor(model => model.State, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </dd>

            <dt>ZipCode:</dt>
            <dd>
                @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </dd>

            <dt>Password:</dt>
            <dd>
           @if (Model.HasPassword == true)
            {
                if (User.Identity.GetUserId() == Model.UserModelID)
                {
                    @Html.ActionLink("Change Password", "ChangePassword")
               }
               else
               {
                    @Html.ActionLink("Set Password", "SetPassword")
               }
           }
           else
           {
               @Html.ActionLink("Set Password", "SetPassword")
           }
            </dd>
        </dl>
    </div>
    <input type="submit" value="Submit" />
}